{
  "name" : "SubtractConstantFrom",
  "itk_name" : "SubtractImageFilter",
  "template_code_filename" : "ImageFilter",
  "template_test_filename" : "ImageFilter",
  "number_of_inputs" : 1,
  "doc" : "Add a constont to an image. The result is cast to the type of the input",
  "pixel_types" : "NonLabelPixelIDTypeList",
  "include_files" : [
    "sitkConditional.h",
    "sitkPixelIDTokens.h"
  ],
  "filter_type" : "itk::SubtractImageFilter<InputImageType, itk::Image< typename itk::simple::Conditional< std::tr1::is_same<typename InputImageType::PixelType, std::complex<float> >::value, float, double>::Type, InputImageType::ImageDimension>, InputImageType>",
  "members" : [
    {
      "name" : "Constant",
      "type" : "double",
      "default" : "1.0",
      "custom_itk_cast" : "filter->SetConstant2( m_Constant );",
      "briefdescriptionSet" : "",
      "detaileddescriptionSet" : "Set the constant that will be used to multiply all the image pixels\n",
      "briefdescriptionGet" : "",
      "detaileddescriptionGet" : ""
    }
  ],
  "tests" : [
    {
      "tag" : "2d",
      "description" : "2D",
      "settings" : [
        {
          "parameter" : "Constant",
          "value" : "2.5"
        }
      ],
      "md5hash" : "c0ba759e85778b02dce170d887ffacc7",
      "inputs" : [
        "Input/STAPLE1.png"
      ]
    },
    {
      "tag" : "3d",
      "description" : "3D",
      "settings" : [
        {
          "parameter" : "Constant",
          "value" : "2.5"
        }
      ],
      "md5hash" : "8d51cc68efed4d9156c99625ceebe915",
      "inputs" : [
        "Input/RA-Short.nrrd"
      ]
    },
    {
      "tag" : "2d_rgb",
      "description" : "2D-RGB",
      "settings" : [
        {
          "parameter" : "Constant",
          "value" : "2.1"
        }
      ],
      "md5hash" : "d635db8d63bcf3a1f257cb42e635ec47",
      "inputs" : [
        "Input/VM1111Shrink-RGBFloat.nrrd"
      ]
    }
  ],
  "briefdescription" : "Subract a constant from all input pixels.\n",
  "detaileddescription" : "This filter is templated over the input image type and the output image type.\n\\author Tom Vercauteren, INRIA & Mauna Kea Technologies\nThis implementation was taken from the Insight Journal paper:http://hdl.handle.net/1926/510\n\\see  UnaryFunctorImageFilter\n\n"
}