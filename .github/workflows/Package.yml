name: Package

on:
  push:
    branches:
      - '*'
  pull_request:
    paths:
      - .github/workflows/Package.yml
  workflow_dispatch:


jobs:


  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set tag name
        id: tag
        run: |
          echo "TAG NAME: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "name=${{github.ref_name}}" >> $GITHUB_OUTPUT
      - name: Create Release Notes
        shell: bash
        run: |
          echo "Tag Name: ${{ steps.tag.outputs.name }}"
          echo "
          This is an automatic pre-release packaging of SimpleITK based on the master branch. It contains the latest features and experimental developments.

          To upgrade to the latest pre-release Python binary package run:
          \`\`\`pip install --upgrade --pre SimpleITK --find-links https://github.com/SimpleITK/SimpleITK/releases/tag/${{ steps.tag.outputs.name }}\`\`\`
          " >notes.txt

          echo "== notes.txt =="
          cat notes.txt

      - name: Create Release and Upload Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ steps.tag.outputs.name }}" == "latest" ]; then
            gh release delete ${{ steps.tag.outputs.name }} --yes || true
          fi

          if [[  "${{ steps.tag.outputs.name }}" == "latest" ||
              "${{ github.ref_name }}" =~ ^v[0-9]+\.[0-9]+(\.[0-9]+)?((-.)?[a-zA-Z]+[0-9]*)?$ ]]; then
            create_args="--prerelease"
          fi

          gh release create ${{ steps.tag.outputs.name }} \
            --target ${{ github.sha }} \
            --draft \
            --generate-notes \
            $create_args \
            --notes-file notes.txt \
            --title "Release ${{ github.ref_name }}"
          #gh release upload ${{ steps.tag.outputs.name }} $( find  ${{ steps.download.outputs.download-path }} -type f -name "*.whl" -o -name "*.zip" -o -name "*.gz" )

          if [ "${{ steps.tag.outputs.name }}" == "latest" ]; then
            gh release edit ${{ steps.tag.outputs.name }} --draft=false
          fi
