#==========================================================================
#
#   Copyright Insight Software Consortium
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#          http://www.apache.org/licenses/LICENSE-2.0.txt
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
#==========================================================================*/

#
# WARNING: DO NOT EDIT THIS FILE!
# THIS FILE IS AUTOMATICALLY GENERATED BY THE SIMPLEITK BUILD PROCESS.
# Please look at PythonImageFilterTestTemplate.py.in to make changes.
#


# This is Python code to test ${name}
import SimpleITK
import sys

inputs = 1
$(if number_of_inputs then
    OUT=[[inputs = ${number_of_inputs}]]
  end)

if len ( sys.argv ) < inputs + 2:
    print ( "Usage: ${name} tag <input(s)> output" )
    sys.exit ( 1 )

tag = sys.argv[1]

reader = SimpleITK.ImageFileReader()
writer = SimpleITK.ImageFileWriter()
filter = SimpleITK.${name}ImageFilter()

$(if #tests == 0 then
    OUT=[[
print ( "No tests defined!" )
sys.exit ( 1 )
    ]]
  end)

$(foreach tests
if tag == "${tag}":
$(when settings
$(foreach settings
$(if parameter == "SeedList" and python_value then
    OUT=[[    filter.ClearSeeds()
    filter$(for i=1,#python_value do OUT=OUT .. ".AddSeed( " .. python_value[i] .. " )" end)]]
elseif parameter == "SeedList" then
    OUT=[[  filter.ClearSeeds()
    filter$(for i=1,#value do OUT=OUT .. ".AddSeed( " .. value[i] .. " )" end)]]
elseif parameter == "TrialPoints" and python_value then
    OUT=[[    filter.ClearTrialPoints()
    filter$(for i=1,#python_value do OUT=OUT .. ".AddTrialPoint( " .. python_value[i] .. " )" end)]]
elseif parameter == "TrialPoints" then
    OUT=[[  filter.ClearTrialPoints()
    filter$(for i=1,#value do OUT=OUT .. ".AddTrialPoint( " .. value[i] .. " )" end)]]
else
OUT=[[
    filter.Set${parameter}( $(if python_value then OUT='${python_value}' else OUT='${value}' end) )]]
end)
)
)

    inputs = []

    for i in range(2, len(sys.argv)-1 ):
      print "reading ", sys.argv[i]
      inputs.append( SimpleITK.ReadImage( sys.argv[i] ) );


$(if inputA_cast then
OUT=[[
    inputs[0] = SimpleITK.Cast( inputs[0], SimpleITK.${inputA_cast} );
     ]]
end)

$(if inputB_cast then
OUT=[[
    inputs[1] = SimpleITK.Cast( inputs[1], SimpleITK.${inputB_cast} );
     ]]
end)

    output = filter.Execute( *tuple(inputs) )

    writer.SetFileName ( sys.argv[-1] ).Execute ( output )
)
